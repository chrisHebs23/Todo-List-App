{"version":3,"sources":["MakeList/MakeList.js","ToCompleteList/ToCompleteList.js","CompletedList/CompletedList.js","TodoAdd/TodoAdd.js","Progress/Progress.js","ResetButton/ResetButton.js","TodoList/TodoList.js","App/App.js","reportWebVitals.js","index.js"],"names":["CompleteList","props","tasks","map","item","className","onClick","onDelete","id","task","ToCompleteList","title","length","CompletedList","TodoAdd","handleSubmit","e","state","preventDefault","onFormSubmit","setState","Date","now","handleChange","value","target","bind","onSubmit","this","type","placeholder","onChange","Component","Progress","totalLength","todo","complete","total","Math","floor","text","isNaN","style","width","ResetButton","TodoList","todoTasks","handleDeleteTodo","todoId","completedTasks","index","findIndex","filter","handleDeleteComplete","handleReset","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3dfcddd5.chunk.js","sourcesContent":["export default function CompleteList(props) {\r\n  return (\r\n    <>\r\n      {props.tasks.map((item) => (\r\n        <li\r\n          className=\"hoverChange\"\r\n          key={item.id}\r\n          onClick={() => {\r\n            props.onDelete(item.id);\r\n          }}\r\n        >\r\n          {item.task}\r\n        </li>\r\n      ))}\r\n    </>\r\n  );\r\n}\r\n","import MakeList from \"../MakeList/MakeList\";\r\n\r\nconst ToCompleteList = (props) => {\r\n  let title = \"Task Complete\";\r\n\r\n  if (props.tasks.length > 1) {\r\n    title = \"Tasks to Complete\";\r\n  }\r\n\r\n  return (\r\n    <div className=\"ListBox\">\r\n      <h2>{title}</h2>\r\n      <ul className=\"list ToComplete\">\r\n        <MakeList tasks={props.tasks} onDelete={props.onDelete} />\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ToCompleteList;\r\n","import MakeList from \"../MakeList/MakeList\";\r\n\r\nexport default function CompletedList(props) {\r\n  let title = \"Task Completed\";\r\n  if (props.tasks.length > 1) {\r\n    title = \"Tasks Completed\";\r\n  }\r\n\r\n  return (\r\n    <div className=\"ListBox\">\r\n      <h2>{title}</h2>\r\n      <ul className=\"list CompletedList\">\r\n        <MakeList tasks={props.tasks} onDelete={props.onDelete} />\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n","import { Component } from \"react\";\r\n\r\nexport default class TodoAdd extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { id: `${Date.now()}`, task: \"\" };\r\n\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    let { id, task } = this.state;\r\n    e.preventDefault();\r\n    if (this.state.task === \"\") return;\r\n    this.props.onFormSubmit(id, task);\r\n    this.setState({ id: `${Date.now()}`, task: \"\" });\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    // let stateCopy = Object.assign({}, this.state);\r\n    // stateCopy.tasks[0].task = e.target.value;\r\n    // this.setState(stateCopy);\r\n    let value = e.target.value;\r\n    this.setState({ task: value });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className=\"FormAlign\" onSubmit={this.handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder={\"Add Task\"}\r\n          value={this.state.task}\r\n          onChange={this.handleChange}\r\n          className=\"TaskPlaceholder\"\r\n        />\r\n        <button className=\"AddButton buttonColor\" type=\"submit\">\r\n          Add\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","export default function Progress(props) {\r\n  let totalLength = props.todo.length + props.complete.length;\r\n  let total = Math.floor((props.complete.length / totalLength) * 100);\r\n  let text = \"Well done\";\r\n\r\n  if (isNaN(total)) {\r\n    text = `Progress 0%`;\r\n    total = 0;\r\n  } else if (total !== 100) {\r\n    text = `Progress ${total}%`;\r\n  }\r\n\r\n  return (\r\n    <div className=\"progressBar\">\r\n      <div style={{ width: `${total}%` }} className=\"displayProgress\">\r\n        <h3>{text}</h3>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","export default function ResetButton(props) {\r\n  return (\r\n    <div className=\"ButtonContainer\">\r\n      <button className=\"resetButton buttonColor\" onClick={props.onClick}>\r\n        Reset Tasks\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport ToCompleteList from \"../ToCompleteList/ToCompleteList\";\r\nimport CompletedList from \"../CompletedList/CompletedList\";\r\nimport TodoAdd from \"../TodoAdd/TodoAdd\";\r\nimport Progress from \"../Progress/Progress\";\r\nimport ResetButton from \"../ResetButton/ResetButton\";\r\n\r\nlet position;\r\n\r\nexport default class TodoList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      todoTasks: [],\r\n      completedTasks: [],\r\n    };\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleDeleteTodo = this.handleDeleteTodo.bind(this);\r\n    this.handleDeleteComplete = this.handleDeleteComplete.bind(this);\r\n  }\r\n\r\n  handleSubmit = (id, task) => {\r\n    this.setState({\r\n      todoTasks: [...this.state.todoTasks, { id: id, task: task }],\r\n    });\r\n  };\r\n\r\n  handleDeleteTodo = (todoId) => {\r\n    const todoTasks = this.state.todoTasks;\r\n    const completedTasks = this.state.completedTasks;\r\n\r\n    let index = todoTasks.findIndex((item) => item.id === todoId);\r\n    if ((index) => 0) {\r\n      this.setState({\r\n        completedTasks: [...completedTasks, todoTasks[index]],\r\n      });\r\n      this.setState({\r\n        todoTasks: todoTasks.filter((e) => e.id !== todoId),\r\n      });\r\n    }\r\n  };\r\n\r\n  handleDeleteComplete = (todoId) => {\r\n    const todoTasks = this.state.todoTasks;\r\n    const completedTasks = this.state.completedTasks;\r\n\r\n    let index = completedTasks.findIndex((item) => item.id === todoId);\r\n    if ((index) => 0) {\r\n      this.setState({\r\n        todoTasks: [...todoTasks, completedTasks[index]],\r\n      });\r\n      this.setState({\r\n        completedTasks: completedTasks.filter((e) => e.id !== todoId),\r\n      });\r\n    }\r\n  };\r\n\r\n  handleReset = () => {\r\n    this.setState({ todoTasks: [] });\r\n    this.setState({ completedTasks: [] });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <TodoAdd onFormSubmit={this.handleSubmit} />\r\n\r\n        <div className=\"blocks\">\r\n          <ToCompleteList\r\n            tasks={this.state.todoTasks}\r\n            onDelete={this.handleDeleteTodo}\r\n          />\r\n          <CompletedList\r\n            tasks={this.state.completedTasks}\r\n            onDelete={this.handleDeleteComplete}\r\n          />\r\n        </div>\r\n        <Progress\r\n          todo={this.state.todoTasks}\r\n          complete={this.state.completedTasks}\r\n        />\r\n        <ResetButton onClick={this.handleReset} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import TodoList from \"../TodoList/TodoList\";\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Todo List App</h1>\r\n      <div className=\"AppContainer\">\r\n        <TodoList />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App/App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App className=\"space\" />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}